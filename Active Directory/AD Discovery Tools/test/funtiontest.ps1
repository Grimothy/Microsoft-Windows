Function CompareDCTime{
    [CmdletBinding()]
    param
    ( 
        #[Parameter(Mandatory=$True,HelpMessage="Please enter a name for the job and report generated by this script")]
        #[Parameter(Mandatory=$true)]
        #[int] $days # Used to located records older than the value specified
        #[Parameter(Mandatory=$true,HelpMessage="Errors Only specifies whether or not to Display only errors reported by DCDIAG")]
        #[ValidateSet('Yes','No')] # Specifies whether or not to prompt the user for the deletion of EACH AND EVERY DNS RECORD
        #[string] $ErrorsOnly
    )

      
    $DomainControllers = Get-ADDomainController -Filter * | Select-Object Hostname, IPv4Address, OperatingSystem, site
    Write-Host -ForegroundColor Green "######################################################################"
    Write-Host -ForegroundColor Green "#             Compare Domain Control NTP Sync                        #"
    Write-Host -ForegroundColor Green "######################################################################"  
    Write-Host ""
    Write-Host "" 
    Write-Host "Please select ONLY 2 domain controller to compare windows time to"
    $DCObjects = Show-Menu -ItemFocusColor Green -MenuItems $DomainControllers.hostname -MultiSelect
    
    if ($($DCObjects).count -ge 3 ){
        Write-Host -ForegroundColor Red -BackgroundColor Black "You can selected more than 2 objects to compare!"
        Write-Host -ForegroundColor Red -BackgroundColor Black "Please only select 2"
        Pause
        Clear-Host
        CompareDCTime

    }else{
        [int]$Samples = Read-Host "Please specify the ammount of time to collect sample data (In Seconds)"
        $Source = $DCObjects[0]
        $Target = $DCObjects[1]
        
        Enter-PSSession -ComputerName $Source -Verbose
        write-host -ForegroundColor Cyan "Connected to " $env:COMPUTERNAME
        cmd /c w32tm /stripchart /computer:$Target /samples:$Samples
        Pause
        Clear-Host
        CompareDCTime


    }

}

CompareDCTime