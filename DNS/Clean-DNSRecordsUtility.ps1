
$LogPath = "$env:SystemDrive\DNS_CleanUp_Util\logs\$(get-date -Format MM-dd-yyyy-hh-mm-ss)__log.txt"
$host.UI.RawUI.BackgroundColor = "black" 
Start-Transcript -Path $LogPath  -Append -Force

function Remove-DNSRecord{
    [CmdletBinding()]
    param( 
        [Parameter(Mandatory=$True,HelpMessage="Please enter a name for the job and report generated by this script")]
        [string] $JobReportName, # Name for the job and report generated by this script
        [string] $Path = "$env:SystemDrive\DNS_CleanUp_Util\DNS Record Removal Jobs\$JobReportName", #location where DNS remove records and reports are stored. 
        [Parameter(Mandatory=$true)]
        [int] $days, # Used to located records older than the value specified
        [Parameter(Mandatory=$true,HelpMessage="With Caution specifies whether or not to prompt the user for the deletion of EACH AND EVERY DNS RECORD")]
        [ValidateSet('Yes','No')] # Specifies whether or not to prompt the user for the deletion of EACH AND EVERY DNS RECORD
        [string] $WithCaution
    )

    $ZoneSelect = Get-DnsServerZone | Out-GridView -PassThru -Title "Select the DNS Zone to Clean"
    $ZoneName = $ZoneSelect.ZoneName
    Write-Host -ForegroundColor Green "The DNS Zone $ZoneName has been selected"
    Start-Sleep -Seconds 2

    Write-Host -ForegroundColor Cyan "Creating directories for deleted records"
    Start-Sleep -Seconds 2
    New-Item -ItemType Directory -Path $Path
    
    "{0},{1},{2},{3},{4},{5},{6}" -F "HostName","RecordType","Type","TimeStamp","TimeToLive","RecordData","ZoneName" | Add-Content -Path "$Path\$(get-date -Format MM-dd-yyyy)__records.csv"
    Write-Host -ForegroundColor Green "Looking for DNS Records older than"$(Get-Date).AddDays(-$days)
    Start-Sleep -Seconds 5
    $recordsfound = Get-DnsServerResourceRecord -ZoneName $ZoneName -RRType A | Where-Object {$_.timestamp -le $(Get-Date).AddDays(-$days)} | Out-GridView -PassThru
    
    If ($WithCaution -like "Yes") {
        Write-Host -ForegroundColor Yellow "With Caution option has been selected. You will be prompted to confirm every DNS record"
        foreach ($i in $recordsfound) {
            "{0},{1},{2},{3},{4},{5},{6}" -F $i.HostName, $i.RecordType, $i.Type,$i.TimeStamp,$i.TimeToLive,$i.RecordData.IPv4Address.IPAddressToString, $ZoneName |Add-Content -Path "$Path\$(get-date -Format MM-dd-yyyy)__records.csv"
             Write-Host -ForegroundColor Magenta "Are you sure you want to delete "$i.hostname" with IP Adress "$i.RecordData.IPv4Address.IPAddressToString"?"
            Remove-DnsServerResourceRecord -ZoneName $ZoneName -RRType A -Name $i.HostName
           
        }
        Write-Host -ForegroundColor Green "Task Completed Returning to main menu"
        Start-Sleep -Seconds 2
        menu
    } else {
        Write-Host -ForegroundColor Yellow "Continuing with the deletion of DNS records"
        foreach ($i in $recordsfound) {
            "{0},{1},{2},{3},{4},{5},{6}" -F $i.HostName, $i.RecordType, $i.Type,$i.TimeStamp,$i.TimeToLive,$i.RecordData.IPv4Address.IPAddressToString, $ZoneName |Add-Content -Path "$Path\$(get-date -Format MM-dd-yyyy)__records.csv"
            Write-Host -ForegroundColor Cyan $i.hostname will be deleted
            Write-Host -ForegroundColor Magenta "Deleting DNS record "$i.hostname" with IP Adress "$i.RecordData.IPv4Address.IPAddressToString
            Remove-DnsServerResourceRecord -ZoneName $ZoneName -RRType A -Name $i.HostName -force
        } 

        Write-Host -ForegroundColor Green "Task Completed Returning to main menu"
        Start-Sleep -Seconds 2
        menu
    }
}

function Get-DNSRecordReport{
    [CmdletBinding()]
    param( 
        [Parameter(Mandatory=$True,HelpMessage="Please enter a name for the job and report generated by this script")]
        [string] $JobReportName, # Name for the job and report generated by this script
        [string] $Path = "$env:SystemDrive\DNS_CleanUp_Util\DNS Record Report Jobs\$JobReportName", #location where DNS remove records and reports are stored. 
        [Parameter(Mandatory=$true)]
        [int] $days # Used to located records older than the value specified
    )
    $ZoneSelect = Get-DnsServerZone | Out-GridView  -PassThru -Title "Select the DNS Zone to generate a report from"
    $ZoneName = $ZoneSelect.ZoneName

    if ($ZoneName.count -gt 1) 
    {
        Write-Host -ForegroundColor red "!!You have selected more than one DNS Zone to generate a report from. You must only select 1 DNS Zone!!"
        Pause
        Get-DNSRecordReport
    }else{
        Write-Host -ForegroundColor Green "The DNS Zone $ZoneName has been selected"
        Start-Sleep -Seconds 2

        Write-Host -ForegroundColor Cyan "Creating directories to store reports"
        Start-Sleep -Seconds 2
        New-Item -ItemType Directory -Path $Path
    
        "{0},{1},{2},{3},{4},{5},{6}" -F "HostName","RecordType","Type","TimeStamp","TimeToLive","RecordData","ZoneName" |Add-Content -Path "$Path\$(get-date -Format MM-dd-yyyy)__records.csv"
        Write-Host -ForegroundColor Green "Looking for DNS Records older than"$(Get-Date).AddDays(-$days)
        Start-Sleep -Seconds 5
        $recordsfound = Get-DnsServerResourceRecord -ZoneName $ZoneName -RRType A | Where-Object {$_.timestamp -le $(Get-Date).AddDays(-$days)}
        ForEach ($i in $recordsfound) {
            "{0},{1},{2},{3},{4},{5},{6}" -F $i.HostName, $i.RecordType, $i.Type,$i.TimeStamp,$i.TimeToLive,$i.RecordData.IPv4Address.IPAddressToString,$ZoneName |Add-Content -Path "$Path\$(get-date -Format MM-dd-yyyy)__records.csv" 
        } 
        Write-Host -ForegroundColor Magenta "Report has found:" $($recordsfound).count "DNS records based on your search"
     Write-Host -ForegroundColor Yellow "For a list of the records, please review the latest log located at:" $Path\$(get-date -Format MM-dd-yyyy)
        pause
        Write-Host -ForegroundColor Green "Task Completed Returning to main menu"

            Start-Sleep -Seconds 2
            #menu
    }    
}

function Redo-DNSRecord{
     
#location where DNS Record Removals are stored by default
      $path = "$env:SystemDrive\DNS_CleanUp_Util\DNS Record Removal Jobs" 
#Selection of the Zone file
    $ZoneSelect = Get-DnsServerZone | Out-GridView -PassThru -Title "Select the DNS Zone to generate a report from"
    $ZoneName = $ZoneSelect.ZoneName
    Write-Host -ForegroundColor Green "The DNS Zone $ZoneName has been selected"
    Start-Sleep -Seconds 2
#Create a Dialog box to select the file for restoration
    [System.Reflection.Assembly]::LoadWithPartialName("System.windows.forms") | Out-Null
    $OpenFileDialog = New-Object System.Windows.Forms.OpenFileDialog
    $OpenFileDialog.initialDirectory = $path
    #$OpenFileDialog.filter = "CSV (*.CSV)| *.CSV"
    $OpenFileDialog.ShowDialog() | Out-Null
    $OpenFileDialog.filename
#Import the CSV and run a loop to add the DNS entries and data back to the the DNS Zone
    Import-Csv -Path $OpenFileDialog.FileName | ForEach-Object {
        
        if ($ZoneName -notlike $_.ZoneName )
        {
            Write-Host -ForegroundColor Red "!!The Record you are trying to restore was not previously configured for this zone!!"
            Write-Host -ForegroundColor Yellow  "!!Please review the records you are attempting to restore and make note of the zone name column!!"
            Write-Host -ForegroundColor Cyan "Records for the restore can be located in the following directory: " $OpenFileDialog.filename
        }else{
            write-host -ForegroundColor Green "Performing a restore for DNS A Record: " $_.hostname
            Add-DnsServerResourceRecordA -ZoneName $ZoneName -Name $_.hostname -IPv4Address $_.recorddata -CreatePtr -AgeRecord -Verbose
        }   
    }
    pause
    Write-Host -ForegroundColor Green "Task Completed Returning to main menu"
    Start-Sleep -Seconds 2
    menu    
}

function Remove-DNSRecordFromCSV{
     
    #location where DNS Record Removals are stored by default
          $path = "$env:SystemDrive\DNS_CleanUp_Util\DNS Record Report Jobs\$JobReportName" 
    #Selection of the Zone file
        $ZoneSelect = Get-DnsServerZone | Out-GridView -PassThru -Title "Select the DNS Zone to generate a report from"
        $ZoneName = $ZoneSelect.ZoneName
        Write-Host -ForegroundColor Green "The DNS Zone $ZoneName has been selected"
        Start-Sleep -Seconds 2
    #Create a Dialog box to select the file for restoration
        [System.Reflection.Assembly]::LoadWithPartialName("System.windows.forms") | Out-Null
        $OpenFileDialog = New-Object System.Windows.Forms.OpenFileDialog
        $OpenFileDialog.initialDirectory = $path
        #$OpenFileDialog.filter = "CSV (*.CSV)| *.CSV"
        $OpenFileDialog.ShowDialog() | Out-Null
        $OpenFileDialog.filename
    #Import the CSV and run a loop to add the DNS entries and data back to the the DNS Zone
        Import-Csv -Path $OpenFileDialog.FileName | ForEach-Object {
            
            if ($ZoneName -notlike $_.ZoneName )
            {
                Write-Host -ForegroundColor Red "!!The Record you are trying to remove was not previously configured for this zone!!"
                Write-Host -ForegroundColor Yellow  "!!Please review the records you are attempting to remove and make note of the zone name column!!"
                Write-Host -ForegroundColor Cyan "Records for the remove can be located in the following directory: " $OpenFileDialog.filename
            }else{
                write-host -ForegroundColor Green "Performing a remove for DNS A Record: " $_.hostname
                remove-DnsServerResourceRecord -RRType 'A' -ZoneName $ZoneName -Name $_.hostname -RecordData $_.recorddata
            }   
        }
        pause
        Write-Host -ForegroundColor Green "Task Completed Returning to main menu"
        Start-Sleep -Seconds 2
        menu    
    }


function menu
{
   param(
       [string]$menutitle = 'Main Menu'
   )
   Clear-Host
   Write-Host "================$menutitle================"
   write-host -ForegroundColor Green "1:Press '1' To export DNS records to CSV."
   write-host -ForegroundColor Green "2:Press '2' To remove DNS records with caution."
   write-host -ForegroundColor Green "3:Press '3' To remove DNS records without caution."
   write-host -ForegroundColor Green "4:Press '4' To remove DNS records from a CSV."
   write-host -ForegroundColor Green "5:Press '5' To restore deleted DNS records."
   Write-Host -ForegroundColor Magenta "Q: Press 'Q' To quit."
}

do{
   menu 
   $userInput = Read-Host "Please make a selection"
   switch ($userInput)
   {
       '1' {
            Write-Host -ForegroundColor Green 'Option 1 --- Export DNS records'
            Get-DNSRecordReport
         }
       '2' {
            Write-Host -ForegroundColor Green 'Option 2 --- With Caution Selected'
            Remove-DNSRecord -WithCaution Yes
        }
       '3' {
            Write-Host -ForegroundColor Green 'Option 3 --- Without Caution Selected'
            Remove-DNSRecord -WithCaution No 
        }
        '4' {
            Write-Host -ForegroundColor Green 'Option 4 --- Remove DNS records from CSV Selected'
            Remove-DNSRecordFromCSV
        }
        '5' {
            Write-Host -ForegroundColor Green 'Option 5 --- Restore DNS Records Selected'
            Redo-DNSRecord
        }
   }

}
until($userInput-eq 'q')


